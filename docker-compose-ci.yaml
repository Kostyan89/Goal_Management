version: "3.9"

x-environment: &environment-shared
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  DB_HOST: postgres
  DEBUG: False
  SECRET_KEY: ${SECRET_KEY}
  SOCIAL_AUTH_VK_OAUTH2_KEY: ${SOCIAL_AUTH_VK_OAUTH2_KEY}
  SOCIAL_AUTH_VK_OAUTH2_SECRET: ${SOCIAL_AUTH_VK_OAUTH2_SECRET}
  BOT_TOKEN: ${BOT_TOKEN}

services:
  front:
    image: sermalenk/skypro-front:lesson_37
    ports:
      - '80:80'
    depends_on:
      - api

  api:
    image: jokerred/todonotes:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment: *environment-shared
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: >
      sh -c "python3 manage.py runserver 0.0.0.0:8000 --adminmedia=/todolist/todolist/static/admin"

  migrations:
    image: jokerred/todonotes:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment: *environment-shared
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python3 manage.py migrate"

  postgres:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data:
