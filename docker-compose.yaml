version: '3.9'
services:

  front:
    image: sermalenk/skypro-front:lesson_37
    ports:
      - '80:80'
    depends_on:
      - api
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 80:8000
    environment:
      DB_HOST: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SECRET_KEY: secretkey
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: >
      sh -c "python3 manage.py runserver 0.0.0.0:8000"
  migrations:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    command: >
      sh -c "python3 manage.py migrate"
  postgres:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    ports:
    - 5434:5434
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

